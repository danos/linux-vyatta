commit e0281bb5a82d702cd1e14afac817d37fde130527
Author: Subash Abhinov Kasiviswanathan <subashab@codeaurora.org>
Date:   Wed Dec 16 21:38:02 2020 -0700

    netfilter: x_tables: Update remaining dereference to RCU
    
    commit 443d6e86f821a165fae3fc3fc13086d27ac140b1 upstream.
    
    This fixes the dereference to fetch the RCU pointer when holding
    the appropriate xtables lock.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Fixes: cc00bcaa5899 ("netfilter: x_tables: Switch synchronization to RCU")
    Signed-off-by: Subash Abhinov Kasiviswanathan <subashab@codeaurora.org>
    Reviewed-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git b/net/ipv4/netfilter/arp_tables.c a/net/ipv4/netfilter/arp_tables.c
index 12d242fedffd..8a6a4384e791 100644
--- b/net/ipv4/netfilter/arp_tables.c
+++ a/net/ipv4/netfilter/arp_tables.c
@@ -1406,7 +1406,7 @@ static int compat_get_entries(struct net *net,
 	xt_compat_lock(NFPROTO_ARP);
 	t = xt_find_table_lock(net, NFPROTO_ARP, get.name);
 	if (!IS_ERR(t)) {
-		const struct xt_table_info *private = xt_table_get_private_protected(t);
+		const struct xt_table_info *private = t->private;
 		struct xt_table_info info;
 
 		ret = compat_table_info(private, &info);
diff --git b/net/ipv4/netfilter/ip_tables.c a/net/ipv4/netfilter/ip_tables.c
index cbbc8a7b8278..485276999544 100644
--- b/net/ipv4/netfilter/ip_tables.c
+++ a/net/ipv4/netfilter/ip_tables.c
@@ -1616,7 +1616,7 @@ compat_get_entries(struct net *net, struct compat_ipt_get_entries __user *uptr,
 	xt_compat_lock(AF_INET);
 	t = xt_find_table_lock(net, AF_INET, get.name);
 	if (!IS_ERR(t)) {
-		const struct xt_table_info *private = xt_table_get_private_protected(t);
+		const struct xt_table_info *private = t->private;
 		struct xt_table_info info;
 		ret = compat_table_info(private, &info);
 		if (!ret && get.size == info.size)
diff --git b/net/ipv6/netfilter/ip6_tables.c a/net/ipv6/netfilter/ip6_tables.c
index 01cdde25eb16..12735ee7713a 100644
--- b/net/ipv6/netfilter/ip6_tables.c
+++ a/net/ipv6/netfilter/ip6_tables.c
@@ -1625,7 +1625,7 @@ compat_get_entries(struct net *net, struct compat_ip6t_get_entries __user *uptr,
 	xt_compat_lock(AF_INET6);
 	t = xt_find_table_lock(net, AF_INET6, get.name);
 	if (!IS_ERR(t)) {
-		const struct xt_table_info *private = xt_table_get_private_protected(t);
+		const struct xt_table_info *private = t->private;
 		struct xt_table_info info;
 		ret = compat_table_info(private, &info);
 		if (!ret && get.size == info.size)
